{
	"id": "f2a3d68a3ed8b0b736fde6e5da3d751a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"12_ForAndWhileLoops.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract ForAndWhileLoops {\n    function loops() external pure {\n        for (uint i = 0; i < 10; i++) {\n            if (i == 3) {\n                \n            }\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"12_ForAndWhileLoops.sol": {
				"ForAndWhileLoops": {
					"abi": [
						{
							"inputs": [],
							"name": "loops",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"12_ForAndWhileLoops.sol\":66:245  contract ForAndWhileLoops {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"12_ForAndWhileLoops.sol\":66:245  contract ForAndWhileLoops {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x938b9ceb\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"12_ForAndWhileLoops.sol\":98:243  function loops() external pure {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"12_ForAndWhileLoops.sol\":144:150  uint i */\n      0x00\n        /* \"12_ForAndWhileLoops.sol\":139:237  for (uint i = 0; i < 10; i++) {... */\n    tag_7:\n        /* \"12_ForAndWhileLoops.sol\":160:162  10 */\n      0x0a\n        /* \"12_ForAndWhileLoops.sol\":156:157  i */\n      dup2\n        /* \"12_ForAndWhileLoops.sol\":156:162  i < 10 */\n      lt\n        /* \"12_ForAndWhileLoops.sol\":139:237  for (uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_8\n      jumpi\n        /* \"12_ForAndWhileLoops.sol\":164:167  i++ */\n      dup1\n      dup1\n      tag_11\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      swap2\n      pop\n      pop\n        /* \"12_ForAndWhileLoops.sol\":139:237  for (uint i = 0; i < 10; i++) {... */\n      jump(tag_7)\n    tag_8:\n      pop\n        /* \"12_ForAndWhileLoops.sol\":98:243  function loops() external pure {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_14:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:323   */\n    tag_12:\n        /* \"#utility.yul\":129:132   */\n      0x00\n        /* \"#utility.yul\":152:176   */\n      tag_17\n        /* \"#utility.yul\":170:175   */\n      dup3\n        /* \"#utility.yul\":152:176   */\n      tag_14\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":143:176   */\n      swap2\n      pop\n        /* \"#utility.yul\":198:264   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":191:196   */\n      dup3\n        /* \"#utility.yul\":188:265   */\n      eq\n        /* \"#utility.yul\":185:288   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":268:286   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":185:288   */\n    tag_18:\n        /* \"#utility.yul\":315:316   */\n      0x01\n        /* \"#utility.yul\":308:313   */\n      dup3\n        /* \"#utility.yul\":304:317   */\n      add\n        /* \"#utility.yul\":297:317   */\n      swap1\n      pop\n        /* \"#utility.yul\":90:323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":329:509   */\n    tag_20:\n        /* \"#utility.yul\":377:454   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":374:375   */\n      0x00\n        /* \"#utility.yul\":367:455   */\n      mstore\n        /* \"#utility.yul\":474:478   */\n      0x11\n        /* \"#utility.yul\":471:472   */\n      0x04\n        /* \"#utility.yul\":464:479   */\n      mstore\n        /* \"#utility.yul\":498:502   */\n      0x24\n        /* \"#utility.yul\":495:496   */\n      0x00\n        /* \"#utility.yul\":488:503   */\n      revert\n\n    auxdata: 0xa26469706673582212201758565c131d2c5c6b1ffc70d6656327c0fcb83e043bec858f580de4c402569e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610106806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063938b9ceb14602d575b600080fd5b60336035565b005b60005b600a8110156050578080604990605d565b9150506038565b50565b6000819050919050565b60006066826053565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415609657609560a1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201758565c131d2c5c6b1ffc70d6656327c0fcb83e043bec858f580de4c402569e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x938B9CEB EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x50 JUMPI DUP1 DUP1 PUSH1 0x49 SWAP1 PUSH1 0x5D JUMP JUMPDEST SWAP2 POP POP PUSH1 0x38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP3 PUSH1 0x53 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH1 0x96 JUMPI PUSH1 0x95 PUSH1 0xA1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PC JUMP 0x5C SGT SAR 0x2C 0x5C PUSH12 0x1FFC70D6656327C0FCB83E04 EXTCODESIZE 0xEC DUP6 DUP16 PC 0xD 0xE4 0xC4 MUL JUMP SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:179:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loops_22": {
									"entryPoint": 53,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 83,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 93,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:512:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "133:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "143:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "170:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "152:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "152:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "143:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "268:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "191:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "198:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "188:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "188:77:1"
															},
															"nodeType": "YulIf",
															"src": "185:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "297:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "308:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "315:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "297:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "119:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "129:3:1",
														"type": ""
													}
												],
												"src": "90:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "357:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "374:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "367:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "471:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "464:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "464:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "495:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "498:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "488:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "329:180:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063938b9ceb14602d575b600080fd5b60336035565b005b60005b600a8110156050578080604990605d565b9150506038565b50565b6000819050919050565b60006066826053565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415609657609560a1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201758565c131d2c5c6b1ffc70d6656327c0fcb83e043bec858f580de4c402569e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x938B9CEB EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH1 0x50 JUMPI DUP1 DUP1 PUSH1 0x49 SWAP1 PUSH1 0x5D JUMP JUMPDEST SWAP2 POP POP PUSH1 0x38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP3 PUSH1 0x53 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH1 0x96 JUMPI PUSH1 0x95 PUSH1 0xA1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PC JUMP 0x5C SGT SAR 0x2C 0x5C PUSH12 0x1FFC70D6656327C0FCB83E04 EXTCODESIZE 0xEC DUP6 DUP16 PC 0xD 0xE4 0xC4 MUL JUMP SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:179:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;98:145;;;:::i;:::-;;;144:6;139:98;160:2;156:1;:6;139:98;;;164:3;;;;;:::i;:::-;;;;139:98;;;;98:145::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:233::-;129:3;152:24;170:5;152:24;:::i;:::-;143:33;;198:66;191:5;188:77;185:103;;;268:18;;:::i;:::-;185:103;315:1;308:5;304:13;297:20;;90:233;;;:::o;329:180::-;377:77;374:1;367:88;474:4;471:1;464:15;498:4;495:1;488:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "52400",
								"executionCost": "105",
								"totalCost": "52505"
							},
							"external": {
								"loops()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 245,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 245,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 245,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 245,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 245,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201758565c131d2c5c6b1ffc70d6656327c0fcb83e043bec858f580de4c402569e64736f6c63430008070033",
									".code": [
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "938B9CEB"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 243,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 98,
											"end": 243,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 243,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 243,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 144,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 237,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 160,
											"end": 162,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 156,
											"end": 157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 139,
											"end": 237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 139,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 164,
											"end": 167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 164,
											"end": 167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 164,
											"end": 167,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 164,
											"end": 167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 164,
											"end": 167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 164,
											"end": 167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 164,
											"end": 167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 139,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 237,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 139,
											"end": 237,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 243,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 129,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 143,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 143,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 191,
											"end": 196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 188,
											"end": 265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 185,
											"end": 288,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 185,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 185,
											"end": 288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 185,
											"end": 288,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 185,
											"end": 288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 315,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 304,
											"end": 317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 297,
											"end": 317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 374,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 474,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 498,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 495,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 503,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"loops()": "938b9ceb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loops\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"12_ForAndWhileLoops.sol\":\"ForAndWhileLoops\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"12_ForAndWhileLoops.sol\":{\"keccak256\":\"0x868e69d8e992fe9e5c798ae21212d62aa3d48b997a993ba56e6e8fe55325f9cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9830f451c1b5d0fc4cb9d257826b194cc50174f9b723ed684e285eca2b189a0\",\"dweb:/ipfs/QmXPqtsbSnDY2DMwxBXQgG9SLT4AAGRWeHkm9BACMTnVz5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"12_ForAndWhileLoops.sol": {
				"ast": {
					"absolutePath": "12_ForAndWhileLoops.sol",
					"exportedSymbols": {
						"ForAndWhileLoops": [
							23
						]
					},
					"id": 24,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "ForAndWhileLoops",
							"nameLocation": "75:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "129:114:0",
										"statements": [
											{
												"body": {
													"id": 19,
													"nodeType": "Block",
													"src": "169:68:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 14,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "187:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "192:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "187:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 18,
															"nodeType": "IfStatement",
															"src": "183:44:0",
															"trueBody": {
																"id": 17,
																"nodeType": "Block",
																"src": "195:32:0",
																"statements": []
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "156:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "160:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "156:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 20,
												"initializationExpression": {
													"assignments": [
														5
													],
													"declarations": [
														{
															"constant": false,
															"id": 5,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "149:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 20,
															"src": "144:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "144:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 7,
													"initialValue": {
														"hexValue": "30",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "153:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "144:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "164:3:0",
														"subExpression": {
															"id": 11,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "164:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 13,
													"nodeType": "ExpressionStatement",
													"src": "164:3:0"
												},
												"nodeType": "ForStatement",
												"src": "139:98:0"
											}
										]
									},
									"functionSelector": "938b9ceb",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loops",
									"nameLocation": "107:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "129:0:0"
									},
									"scope": 23,
									"src": "98:145:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 24,
							"src": "66:179:0",
							"usedErrors": []
						}
					],
					"src": "33:212:0"
				},
				"id": 0
			}
		}
	}
}